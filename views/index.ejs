<!DOCTYPE html>
<html lang="hu">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>WebNotes - Jegyzetek</title>
        <link rel="stylesheet" href="/css/tabler.min.css" />
        <link href="/css/tabler-icons-outline.min.css" rel="stylesheet" />
        <link href="/css/custom.css" rel="stylesheet" />
        <link href="https://cdn.jsdelivr.net/npm/sweetalert2@7.12.15/dist/sweetalert2.min.css" rel="stylesheet" />
    </head>
    <style>
        .promo-banner {
            background: linear-gradient(120deg, rgba(30, 41, 59, 0.8) 0%, rgba(44, 82, 130, 0.9) 100%);
            border-radius: 8px;
            border: 1px solid rgba(88, 133, 208, 0.2);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            padding: 16px 20px;
            margin-bottom: 24px;
            position: relative;
        }

        .promo-banner::before {
            content: '';
            position: absolute;
            inset: 0;
            background: radial-gradient(circle at 30% 50%, rgba(99, 102, 241, 0.15) 0%, transparent 80%);
            z-index: 1;
        }

        .promo-icon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
            background: rgba(99, 102, 241, 0.2);
            border-radius: 8px;
            margin-right: 16px;
            color: #94a3b8;
            position: relative;
        }

        .promo-icon i {
            font-size: 20px;
            color: #f8fafc;
            position: relative;
            z-index: 2;
        }

        .promo-icon::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, rgba(99, 102, 241, 0.5) 0%, rgba(56, 189, 248, 0.3) 100%);
            z-index: 1;
        }

        .promo-title {
            font-weight: 600;
            font-size: 16px;
            color: #f8fafc;
            margin-bottom: 4px;
            display: flex;
            align-items: center;
        }

        .sparkle {
            margin-left: 6px;
            font-size: 16px;
        }

        .promo-desc {
            font-size: 14px;
            color: #94a3b8;
            margin: 0;
        }

        .promo-btn {
            background: rgba(255, 255, 255, 0.1);
            color: #f8fafc;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 6px;
            padding: 8px 16px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            display: inline-flex;
            align-items: center;
            position: relative;
            z-index: 2;
        }

        .promo-btn:hover {
            background: rgba(255, 255, 255, 0.15);
            border-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-1px);
        }

        .promo-btn i {
            margin-left: 8px;
            font-size: 14px;
        }
    </style>
    <body>
        <div class="page">
            <header class="navbar navbar-expand-md navbar-light d-print-none">
                <div class="container-xl">
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbar-menu">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <h1 class="navbar-brand navbar-brand-autodark">
                        <a href="/">
                            <img src="/img/logo/WebNotes.svg" width="110" height="32" alt="WebNotes" class="navbar-brand-image" />
                        </a>
                    </h1>

                    <div class="navbar-nav flex-row order-md-last">
                        <div class="nav-item me-3">
                            <a href="?theme=dark" class="nav-link px-0 hide-theme-dark" title="S√∂t√©t m√≥d bekapcsol√°sa" data-bs-toggle="tooltip" data-bs-placement="bottom">
                                <i class="ti ti-moon"></i>
                            </a>
                            <a href="?theme=light" class="nav-link px-0 hide-theme-light" title="Vil√°gos m√≥d bekapcsol√°sa" data-bs-toggle="tooltip" data-bs-placement="bottom">
                                <i class="ti ti-sun"></i>
                            </a>
                        </div>

                        <!-- Ellen≈ërizz√ºk, hogy van-e bejelentkezett felhaszn√°l√≥ -->
                        <div class="nav-item dropdown">
                            <a href="#" class="nav-link d-flex lh-1 text-reset p-0" data-bs-toggle="dropdown">
                                <span class="avatar avatar-sm rounded" id="user-avatar"></span>
                                <div class="d-none d-xl-block ps-2">
                                    <div class="user-name">
                                        <span id="user-name"></span>
                                        <i id="user-role-icon"></i>
                                    </div>
                                    <div class="mt-1 small text-muted" id="user-email"></div>
                                </div>
                            </a>

                            <div class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                                <a href="/profile" class="dropdown-item"><i class="ti ti-user me-1"></i>Profil</a>
                                <a href="/settings" class="dropdown-item"><i class="ti ti-settings me-1"></i>Be√°ll√≠t√°sok</a>
                                <div class="dropdown-divider"></div>
                                <a href="/logout" class="dropdown-item text-danger"> <i class="ti ti-logout me-1"></i>Kijelentkez√©s </a>
                            </div>
                        </div>
                    </div>
                </div>
            </header>

            <div class="page-wrapper">
                <div class="page-header d-print-none">
                    <div class="container-xl">
                        <div class="row align-items-center">
                            <div class="col">
                                <h2 class="page-title">üìí Jegyzetek</h2>
                            </div>
                            <div class="col-auto ms-auto d-print-none">
                                <button class="btn btn-primary d-inline-flex align-items-center" onclick="openNoteModal()">
                                    <i class="ti ti-plus icon me-1"></i>
                                    √öj jegyzet
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="page-body">
                    <div class="container-xl">
                        <div class="card mb-3">
                            <div class="card-body">
                                <div class="input-icon">
                                    <span class="input-icon-addon">
                                        <i class="ti ti-search"></i>
                                    </span>
                                    <input type="text" class="form-control" placeholder="Jegyzetek keres√©se..." id="searchInput" />
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-12">
                                <div class="promo-banner">
                                    <div class="row align-items-center">
                                        <div class="col-md-8 d-flex align-items-center position-relative" style="z-index: 2">
                                            <div class="promo-icon">
                                                <i class="ti ti-star"></i>
                                            </div>
                                            <div class="promo-text">
                                                <h3 class="promo-title">WebNotes Pro v√°r r√°d! <span class="sparkle">‚ú®</span></h3>
                                                <p class="promo-desc">Tapasztald meg a korl√°tlan lehet≈ës√©geket √©s pr√©mium funkci√≥kat.</p>
                                            </div>
                                        </div>
                                        <div class="col-md-4 text-md-end text-start mt-3 mt-md-0">
                                            <button class="promo-btn" onclick="upgradeToPro()"> Friss√≠t√©s <i class="ti ti-arrow-right"></i> </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row row-cards" id="noteList"> </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal modal-blur fade" id="noteModal" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg modal-dialog-centered" role="document">
                <div class="modal-content">
                    <form id="noteForm" onsubmit="saveNote(event)">
                        <div class="modal-header">
                            <h5 class="modal-title">√öj jegyzet</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <label class="form-label required">C√≠m</label>
                                <input type="text" class="form-control" id="noteTitle" name="title" required />
                            </div>
                            <input type="hidden" id="csrf_token" name="_csrf" value="<%= csrfToken %>" />
                            <div class="mb-3">
                                <label class="form-label required">Tartalom</label>
                                <textarea id="noteContent" name="content" class="form-control"></textarea>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">C√≠mk√©k</label>
                                <div id="tag-container" class="form-control d-flex flex-wrap align-items-center gap-2 p-2"></div>
                                <input type="text" class="form-control mt-2" id="tagInput" placeholder="√çrj be egy c√≠mk√©t √©s nyomj ENTER-t vagy ','" />
                                <input type="hidden" name="tags" id="hiddenTags" />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">
                                <i class="ti ti-device-floppy icon me-1"></i>
                                Ment√©s
                            </button>
                            <button type="button" class="btn btn-link link-secondary me-auto" data-bs-dismiss="modal"> M√©gse </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <script src="/js/tabler.min.js"></script>
        <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10.10.1/dist/sweetalert2.all.min.js"></script>
        <script src="/js/editor/hugerte.min.js"></script>
        <script src="/js/app.js"></script>
        <script>
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.onmouseenter = Swal.stopTimer
                    toast.onmouseleave = Swal.resumeTimer
                },
            })
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const tagInput = document.getElementById('tagInput')
                const tagContainer = document.getElementById('tag-container')
                const hiddenTags = document.getElementById('hiddenTags')
                let tags = []

                function updateHiddenInput() {
                    hiddenTags.value = tags.join(',')
                }

                function createTagElement(tag) {
                    const tagElement = document.createElement('div')
                    tagElement.classList.add('badge', 'bg-primary', 'me-1', 'p-2', 'text-white')
                    tagElement.textContent = tag

                    const removeBtn = document.createElement('span')
                    removeBtn.textContent = ' ‚úñ'
                    removeBtn.style.cursor = 'pointer'
                    removeBtn.onclick = () => {
                        tags = tags.filter((t) => t !== tag)
                        updateHiddenInput()
                        tagElement.remove()
                    }

                    tagElement.appendChild(removeBtn)
                    tagContainer.appendChild(tagElement)
                }

                tagInput.addEventListener('keydown', (event) => {
                    if (event.key === 'Enter' || event.key === ',') {
                        event.preventDefault()
                        const tag = tagInput.value.trim()
                        if (tag && !tags.includes(tag)) {
                            tags.push(tag)
                            createTagElement(tag)
                            updateHiddenInput()
                        }
                        tagInput.value = ''
                    }
                })

                tagInput.addEventListener('keydown', (event) => {
                    if (event.key === 'Backspace' && tagInput.value === '' && tags.length > 0) {
                        const lastTag = tags.pop()
                        updateHiddenInput()
                        ;[...tagContainer.getElementsByClassName('badge')].pop().remove()
                    }
                })
            })
        </script>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                let options = {
                    selector: '#noteContent',
                    height: 300,
                    language: 'hu_HU',
                    menubar: true,
                    statusbar: false,
                    license_key: 'gpl',
                    plugins: ['advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview', 'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen', 'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'],
                    toolbar: 'undo redo | formatselect | ' + 'bold italic backcolor | alignleft aligncenter ' + 'alignright alignjustify | bullist numlist outdent indent | ' + 'removeformat',
                    content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; -webkit-font-smoothing: antialiased; }',
                }
                if (localStorage.getItem('theme') === 'dark') {
                    options.skin = 'oxide-dark'
                    options.content_css = 'dark'
                }
                hugerte.init(options)
            })

            let notes = []
            const noteModal = new bootstrap.Modal(document.getElementById('noteModal'))

            document.addEventListener('DOMContentLoaded', () => {
                loadNotes()
                initSearchHandler()
            })

            async function loadNotes() {
                try {
                    const response = await fetch('/notes/list')
                    const data = await response.json()

                    if (data.status === 'success') {
                        notes = data.notes
                        renderNotes(notes)
                    } else {
                        showError('Hiba t√∂rt√©nt a jegyzetek bet√∂lt√©sekor')
                    }
                } catch (error) {
                    showError('Nem siker√ºlt kapcsol√≥dni a szerverhez')
                }
            }

            function renderNotes(notesToRender) {
                const noteList = document.getElementById('noteList')

                if (notesToRender.length === 0) {
                    noteList.innerHTML = `
                                     <div class="col-12">
                                       <div class="card card-body text-center">
                                         <i class="ti ti-notes-off icon-lg text-muted mb-3"></i>
                                         <h3>Nincsenek jegyzetek</h3>
                                         <p class="text-muted">Hozz l√©tre egy √∫j jegyzetet a "+ √öj jegyzet" gombbal!</p>
                                       </div>
                                     </div>`
                    return
                }

                noteList.innerHTML = notesToRender
                    .map(
                        (note) => `
                                   <div class="col-md-4">
                                     <div class="card">
                                       <div class="card-header">
                                         <h3 class="card-title">${escapeHtml(note.title)}</h3>
                                         <div class="card-actions">
                                           <div class="dropdown">
                                             <a href="#" class="btn-action dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                               <i class="ti ti-dots-vertical"></i>
                                             </a>
                                             <div class="dropdown-menu dropdown-menu-end">
                                               <a class="dropdown-item" href="#" onclick="editNote(${note.id})">
                                                 <i class="ti ti-edit icon dropdown-item-icon"></i>
                                                 Szerkeszt√©s
                                               </a>
                                               <a class="dropdown-item text-danger" href="#" onclick="deleteNote(${note.id})">
                                                 <i class="ti ti-trash icon dropdown-item-icon"></i>
                                                 T√∂rl√©s
                                               </a>
                                             </div>
                                           </div>
                                         </div>
                                       </div>
                                       <div class="card-body">
                                         <div class="text-muted mb-3">
                                           ${note.createdAt ? new Date(note.createdAt).toLocaleDateString('hu-HU') : 'Nincs d√°tum'}
                                         </div>
                                         <div class="card-text">
                                           ${note.content}
                                         </div>
                                         ${
                                             note.tags && note.tags.length > 0
                                                 ? `
                                           <div class="mt-3">
                                             ${note.tags
                                                 .map(
                                                     (tag) => `
                                               <span class="badge bg-blue-lt me-1">${escapeHtml(tag)}</span>
                                             `
                                                 )
                                                 .join('')}
                                           </div>
                                         `
                                                 : ''
                                         }
                                       </div>
                                     </div>
                                   </div>
                                 `
                    )
                    .join('')
            }

            function initSearchHandler() {
                const searchInput = document.getElementById('searchInput')
                let timeoutId

                searchInput.addEventListener('input', (e) => {
                    clearTimeout(timeoutId)
                    timeoutId = setTimeout(() => {
                        const searchTerm = e.target.value.toLowerCase()
                        const filteredNotes = notes.filter((note) => note.title.toLowerCase().includes(searchTerm) || note.content.toLowerCase().includes(searchTerm) || note.tags.some((tag) => tag.toLowerCase().includes(searchTerm)))
                        renderNotes(filteredNotes)
                    }, 300)
                })
            }

            async function saveNote(event) {
                event.preventDefault()
                const form = event.target
                const formData = new FormData(form)
                const content = tinymce.get('noteContent').getContent()
                const tags = formData
                    .get('tags')
                    .split(',')
                    .map((tag) => tag.trim())
                    .filter((tag) => tag.length > 0)

                const noteData = {
                    title: formData.get('title'),
                    content: content,
                    tags: tags,
                    createdAt: new Date().toISOString(),
                }

                try {
                    const response = await fetch('/notes/save', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-Token': formData.get('_csrf'),
                        },
                        body: JSON.stringify({
                            notes: JSON.stringify([noteData]),
                        }),
                    })

                    const data = await response.json()

                    if (data.status === 'success') {
                        await loadNotes()
                        noteModal.hide()
                        form.reset()
                        hugerte.get('noteContent').setContent('')
                        Toast.fire({
                            icon: 'success',
                            title: 'Jegyzet mentve!',
                        })
                    } else {
                        Toast.fire({
                            icon: 'error',
                            title: 'Nem siker√ºlt menteni a jegyzetet',
                        })
                    }
                } catch (error) {
                    console.error(error)
                    Toast.fire({
                        icon: 'error',
                        title: 'Nem siker√ºlt menteni a jegyzetet',
                    })
                }
            }

            function escapeHtml(unsafe) {
                return unsafe.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;').replace(/'/g, '&#039;')
            }

            function showSuccess(message) {
                alert(message) // TODO: Implement Tabler toast
            }

            function showError(message) {
                alert(message) // TODO: Implement Tabler toast
            }

            function openNoteModal() {
                document.getElementById('noteForm').reset()
                hugerte.get('noteContent').setContent('')
                noteModal.show()
            }

            function editNote(id) {
                const note = notes.find((n) => n.id === id)
                if (!note) return

                document.getElementById('noteTitle').value = note.title
                hugerte.get('noteContent').setContent(note.content)
                document.getElementById('noteTags').value = note.tags.join(', ')
                noteModal.show()
            }

            function deleteNote(id) {
                if (confirm('Biztosan t√∂r√∂lni szeretn√©d ezt a jegyzetet?')) {
                    console.log('T√∂rl√©s:', id) // TODO: Implement delete API
                }
            }
        </script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                // T√©ma preferencia ment√©se
                const saveTheme = (theme) => {
                    localStorage.setItem('theme', theme)
                    document.body.setAttribute('data-bs-theme', theme)
                }

                // T√©mav√°lt√≥ linkek kezel√©se
                document.querySelectorAll('[href^="?theme="]').forEach((link) => {
                    link.addEventListener('click', (e) => {
                        e.preventDefault()
                        const theme = e.currentTarget.href.includes('dark') ? 'dark' : 'light'
                        saveTheme(theme)
                    })
                })

                // Mentett t√©ma bet√∂lt√©se
                const savedTheme = localStorage.getItem('theme') || 'light'
                document.body.setAttribute('data-bs-theme', savedTheme)
            })
        </script>
    </body>
</html>
