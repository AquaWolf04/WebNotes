const { User } = require('../../app/models')
const { sendEmailVerification } = require('../../utils/mailer')

/*
 *   Email c√≠m modos√≠t√°sa
 */

const changeEmail = async (req, res) => {
    try {
        // Bejelentkezett felhaszn√°l√≥ lek√©r√©se
        const user = await User.findByPk(req.session.userId)

        // Ha nincs ilyen felhaszn√°l√≥, akkor hib√°t dobunk
        if (!user) {
            return res.status(404).json({
                success: false,
                message: 'Felhaszn√°l√≥ nem tal√°lhat√≥!',
            })
        }

        // √öj email c√≠m be√°ll√≠t√°sa
        const newEmail = req.body.email
        const password = req.body.password

        // Ha a jelsz√≥ nem egyezik, akkor hib√°t dobunk
        if (!user.validPassword(password)) {
            return res.status(400).json({
                success: false,
                message: 'A jelsz√≥ nem egyezik!',
            })
        }

        // N√©zz√ºk meg, hogy van-e m√°r ilyen email c√≠m
        const existingUser = await User.findOne({ where: { email: newEmail } })

        // Ha van m√°r ilyen email c√≠m, akkor hib√°t dobunk
        if (existingUser) {
            return res.status(400).json({
                success: false,
                message: 'Ez az email c√≠m m√°r foglalt!',
            })
        }
        console.log('üü¢ K√ºldj√ºk az emailt ide:', newEmail)

        await sendEmailVerification(user, newEmail, user.email)

        return res.json({
            success: true,
            message:
                'Az email c√≠med megv√°ltoztat√°s√°hoz sz√ºks√©ges l√©p√©seket elk√ºldt√ºk a megadott email c√≠mre!',
        })

        // SMTP email ki k√ºld√©se a r√©gi √©s az √∫j email c√≠mre
    } catch (err) {
        console.error('Change email error:', err)
        return res.status(500).json({
            success: false,
            message: 'Szerverhiba t√∂rt√©nt. Pr√≥b√°ld √∫jra k√©s≈ëbb!',
        })
    }
}

module.exports = {
    changeEmail,
}
